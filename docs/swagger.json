{
    "swagger": "2.0",
    "info": {
        "description": "This is a doc for compass_mini_api.",
        "title": "compass_mini_api",
        "contact": {},
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/auth/get_data_token": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Data Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get Data Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetDataTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login user, get your Geolocation from https://ip.nf/me.json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Android",
                        "description": "entity",
                        "name": "entity",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/splash": {
            "post": {
                "description": "Splash screen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Splash screen",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthSplashRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthSplashResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/company": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get All Company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get All Company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\u003cbr\u003eexample string json: [{\"column\":\"name\",\"value\":\"code\",\"comparation\":\"%\"}]\u003cbr\u003eexample query encode: %5B%7B%22column%22%3A%22name%22%2C%22value%22%3A%22code%22%2C%22comparation%22%3A%22%25%22%7D%5D",
                        "description": "filter by conditions with query encode value",
                        "name": "conditions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAllCompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get All Employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get All Employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "name / company / division / supervisor / email / joindate",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "asc / desc",
                        "description": "direction",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\u003cbr\u003eexample string json: [{\"column\":\"name\",\"value\":\"yusnar\",\"comparation\":\"%\"},{\"column\":\"companyid\",\"value\":\"43\",\"comparation\":\"=\"},{\"column\":\"joindate\",\"value\":\"2024-01-24_2024-01-28\",\"comparation\":\"between\"}]\u003cbr\u003eexample query encode: %5B%7B%22column%22%3A%22name%22%2C%22value%22%3A%22yusnar%22%2C%22comparation%22%3A%22%25%22%7D%2C%7B%22column%22%3A%22companyid%22%2C%22value%22%3A%2243%22%2C%22comparation%22%3A%22%3D%22%7D%2C%7B%22column%22%3A%22joindate%22%2C%22value%22%3A%222024-01-24_2024-01-28%22%2C%22comparation%22%3A%22between%22%7D%5D",
                        "description": "filter by conditions with query encode value",
                        "name": "conditions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeGetAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create employee",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "CODE.ID",
                        "name": "company",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 43,
                        "name": "companyid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Maintenance",
                        "name": "division",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 16,
                        "name": "divisionid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "yusnar@code.id",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "2024-01-24",
                        "name": "joindate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Yusnar Setiyadi",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "+6281234567812",
                        "name": "phonenumber",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "Herru Purnomo Santoso",
                        "name": "supervisor",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "supervisorid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image",
                        "name": "employeephoto",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee/employeephoto/{base64}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee Photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get Employee Photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64",
                        "name": "base64",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/employee/supervisor": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get All Employee for Supervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get All Employee for Supervisor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\u003cbr\u003eexample string json: [{\"column\":\"name\",\"value\":\"herru\",\"comparation\":\"%\"}]\u003cbr\u003eexample query encode: %5B%7B%22column%22%3A%22name%22%2C%22value%22%3A%22herru%22%2C%22comparation%22%3A%22%25%22%7D%5D",
                        "description": "filter by conditions with query encode value",
                        "name": "conditions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeSupervisorGetAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee/with_base64": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create employee With Base64, please fill data base64 with Plain-text - just The Base64 value, see https://base64.guru/converter/encode/file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create employee With Base64",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateEmployeeRequestWithBase64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee/with_base64/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update employee With Base64, please fill data base64 with Plain-text - just The Base64 value, see https://base64.guru/converter/encode/file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee With Base64",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "id employee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateEmployeeRequestWithBase64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get Employee By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "id employee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmployeeGetByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update employee",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "id employee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "CODE.ID",
                        "name": "company",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 43,
                        "name": "companyid",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "Maintenance",
                        "name": "division",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 16,
                        "name": "divisionid",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "fahrul@code.id",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "name": "isactive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "2024-01-25",
                        "name": "joindate",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "Fahrul Update",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "+6281234567813",
                        "name": "phonenumber",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "2024-01-25",
                        "name": "resigndate",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "Herru Purnomo Santoso",
                        "name": "supervisor",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "supervisorid",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "image",
                        "name": "employeephoto",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/feature/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Feature List Items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature"
                ],
                "summary": "Get Feature List Items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Android",
                        "description": "entity",
                        "name": "entity",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetFeatureListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/feature/sub/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Feature Sub List Items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature"
                ],
                "summary": "Get Feature Sub List Items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Android",
                        "description": "entity",
                        "name": "entity",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "id feature",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetFeatureSubResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/parameteritem/get_all_division": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get All Division",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ParameterItem"
                ],
                "summary": "Get All Division",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\u003cbr\u003eexample string json: [{\"column\":\"name\",\"value\":\"Maintenance\",\"comparation\":\"=\"}]\u003cbr\u003eexample query encode: %5B%7B%22column%22%3A%22name%22%2C%22value%22%3A%22Maintenance%22%2C%22comparation%22%3A%22%3D%22%7D%5D",
                        "description": "filter by conditions with query encode value",
                        "name": "conditions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAllDivisionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/change_password/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "id user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserChangePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AuthLoginRequest": {
            "type": "object",
            "required": [
                "geolocation",
                "mobilephone",
                "password"
            ],
            "properties": {
                "geolocation": {
                    "$ref": "#/definitions/dto.Geolocation"
                },
                "mobilephone": {
                    "type": "string",
                    "example": "+6281234567890"
                },
                "password": {
                    "type": "string",
                    "example": "Test12345@"
                }
            }
        },
        "dto.AuthLoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "your access token"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "your refresh token"
                }
            }
        },
        "dto.AuthLogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.AuthSplashRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "your access token"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "your refresh token"
                }
            }
        },
        "dto.AuthSplashResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "your access token"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "your refresh token"
                }
            }
        },
        "dto.CreateEmployeeRequestWithBase64": {
            "type": "object",
            "required": [
                "company",
                "companyid",
                "division",
                "divisionid",
                "employeephoto",
                "joindate",
                "name",
                "supervisor",
                "supervisorid"
            ],
            "properties": {
                "company": {
                    "type": "string",
                    "example": "CODE.ID"
                },
                "companyid": {
                    "type": "integer",
                    "example": 43
                },
                "division": {
                    "type": "string",
                    "example": "Maintenance"
                },
                "divisionid": {
                    "type": "integer",
                    "example": 16
                },
                "email": {
                    "type": "string",
                    "example": "yusnar@code.id"
                },
                "employeephoto": {
                    "$ref": "#/definitions/dto.EmployeePhoto"
                },
                "joindate": {
                    "type": "string",
                    "example": "2024-01-24"
                },
                "name": {
                    "type": "string",
                    "example": "Yusnar Setiyadi"
                },
                "phonenumber": {
                    "type": "string",
                    "example": "+6281234567812"
                },
                "supervisor": {
                    "type": "string",
                    "example": "Herru Purnomo Santoso"
                },
                "supervisorid": {
                    "type": "integer",
                    "example": 11
                }
            }
        },
        "dto.EmployeeGetAllResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeGetAllResponse"
                    }
                }
            }
        },
        "dto.EmployeePhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "base64 value"
                },
                "name": {
                    "type": "string",
                    "example": "gambar.png"
                },
                "size": {
                    "type": "integer",
                    "example": 98220
                },
                "type": {
                    "type": "string",
                    "example": "image/png"
                }
            }
        },
        "dto.EmployeeSupervisorGetAllResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeSupervisorGetAllResponse"
                    }
                }
            }
        },
        "dto.Geolocation": {
            "type": "object",
            "properties": {
                "asn": {
                    "type": "string",
                    "example": "AS23700 Linknet-Fastnet ASN"
                },
                "city": {
                    "type": "string",
                    "example": "Jakarta"
                },
                "country": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "country_code": {
                    "type": "string",
                    "example": "ID"
                },
                "hostname": {
                    "type": "string",
                    "example": "fm-dyn-111-94-121-97.fast.net.id."
                },
                "ip": {
                    "type": "string",
                    "example": "111.94.121.97"
                },
                "latitude": {
                    "type": "number",
                    "example": -6.1743998527526855
                },
                "longitude": {
                    "type": "number",
                    "example": 106.82939910888672
                },
                "netmask": {
                    "type": "integer",
                    "example": 16
                },
                "post_code": {
                    "type": "string",
                    "example": "15710"
                }
            }
        },
        "dto.GetAllCompanyResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CompanyEntityModel"
                    }
                }
            }
        },
        "dto.GetAllDivisionResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GetAllDivisionResponse"
                    }
                }
            }
        },
        "dto.GetDataTokenResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identityid": {
                    "type": "integer"
                },
                "isactive": {
                    "type": "boolean"
                },
                "islocked": {
                    "type": "boolean"
                },
                "mobilephone": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "roleid": {
                    "type": "integer"
                }
            }
        },
        "dto.GetFeatureListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FeatureListResponse"
                    }
                }
            }
        },
        "dto.GetFeatureSubResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FeatureSubResponse"
                    }
                }
            }
        },
        "dto.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateEmployeeRequestWithBase64": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string",
                    "example": "CODE.ID"
                },
                "companyid": {
                    "type": "integer",
                    "example": 43
                },
                "division": {
                    "type": "string",
                    "example": "Maintenance"
                },
                "divisionid": {
                    "type": "integer",
                    "example": 16
                },
                "email": {
                    "type": "string",
                    "example": "fahrul@code.id"
                },
                "employeephoto": {
                    "$ref": "#/definitions/dto.EmployeePhoto"
                },
                "isactive": {
                    "type": "boolean",
                    "example": false
                },
                "joindate": {
                    "type": "string",
                    "example": "2024-01-25"
                },
                "name": {
                    "type": "string",
                    "example": "Fahrul Update"
                },
                "phonenumber": {
                    "type": "string",
                    "example": "+6281234567813"
                },
                "resigndate": {
                    "type": "string",
                    "example": "2024-01-25"
                },
                "supervisor": {
                    "type": "string",
                    "example": "Herru Purnomo Santoso"
                },
                "supervisorid": {
                    "type": "integer",
                    "example": 11
                }
            }
        },
        "dto.UserChangePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "Test12345@"
                },
                "old_password": {
                    "type": "string",
                    "example": "Test1234@"
                }
            }
        },
        "dto.UserChangePasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.CompanyEntityModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "invoiceduedate": {
                    "type": "integer"
                },
                "isvendor": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeGetAllResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "companyid": {
                    "type": "integer"
                },
                "division": {
                    "type": "string"
                },
                "divisionid": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "employeephoto": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isactive": {
                    "type": "boolean"
                },
                "joindate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                },
                "resigndate": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "string"
                },
                "supervisorid": {
                    "type": "integer"
                },
                "uniquekey": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeGetByIdResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employeephoto": {
                    "type": "string"
                },
                "isactive": {
                    "type": "boolean"
                },
                "joindate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                },
                "resigndate": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "string"
                },
                "uniquekey": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeSupervisorGetAllResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "companyid": {
                    "type": "integer"
                },
                "division": {
                    "type": "string"
                },
                "divisionid": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "employeephoto": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isactive": {
                    "type": "boolean"
                },
                "joindate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                },
                "resigndate": {
                    "type": "string"
                },
                "supervisor": {
                    "type": "string"
                },
                "supervisorid": {
                    "type": "integer"
                },
                "uniquekey": {
                    "type": "string"
                }
            }
        },
        "model.FeatureListResponse": {
            "type": "object",
            "properties": {
                "allowadd": {
                    "type": "boolean"
                },
                "allowdelete": {
                    "type": "boolean"
                },
                "allowprint": {
                    "type": "boolean"
                },
                "allowupdate": {
                    "type": "boolean"
                },
                "allowview": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.FeatureSubResponse": {
            "type": "object",
            "properties": {
                "allowadd": {
                    "type": "boolean"
                },
                "allowdelete": {
                    "type": "boolean"
                },
                "allowprint": {
                    "type": "boolean"
                },
                "allowupdate": {
                    "type": "boolean"
                },
                "allowview": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GetAllDivisionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isactive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parameter": {
                    "type": "string"
                },
                "parameterid": {
                    "type": "integer"
                }
            }
        },
        "response.Meta": {
            "type": "object",
            "properties": {
                "error_id": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "response.errorResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "description": {},
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        }
    }
}